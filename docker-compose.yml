services:
  # Frontend React application - Development
  qltc-client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    image: ${DOCKER_USERNAME:-qltc}/qltc-client-dev:${IMAGE_TAG:-latest}
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - qltc-server
    networks:
      - qltc-network
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001/api
    env_file:
      - ./client/.env.development

  # Backend Node.js server - Development
  qltc-server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    image: ${DOCKER_USERNAME:-qltc}/qltc-server-dev:${IMAGE_TAG:-latest}
    ports:
      - "3001:3001"
    volumes:
      - /app/node_modules
      - ./server:/app
      - uploads-data:/app/uploads
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=Admin12345
      - DB_DATABASE=TiecCuoiDB
    env_file:
      - ./server/.env.development
    networks:
      - qltc-network
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  # MySQL Database
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_ROOT_PASSWORD=Admin12345
      - MYSQL_DATABASE=TiecCuoiDB
      - MYSQL_USER=tieccuoi
      - MYSQL_PASSWORD=tieccuoi123
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./Database/init:/docker-entrypoint-initdb.d
    networks:
      - qltc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20

# Volumes for data persistence
volumes:
  mysql-data:
  uploads-data:

# Networks for service communication
networks:
  qltc-network:
    driver: bridge